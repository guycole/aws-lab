{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description":"vpc-public-private.json",

  "Parameters": {
    "KeyName":{
      "Description":"EC2 KeyPair",
      "Type":"AWS::EC2::KeyPair::KeyName",
      "Default":"ec2-user-ore",
      "ConstraintDescription":"existing EC2 KeyPair"
    },

    "Region": {
      "Description": "AWS Region",
      "Type": "String",
      "Default": "us-west-2"
    },

    "PrivateAvailZone": {
      "Description": "Private Availability Zone",
      "Type": "String",
      "Default": "us-west-2b"
    },

    "PublicAvailZone": {
      "Description": "Public Availability Zone",
      "Type": "String",
      "Default": "us-west-2c"
    }
  },

  "Mappings":{
    "SubnetConfig":{
      "VPC":{"CIDR":"192.168.0.0/16"},
      "Private":{"CIDR":"192.168.2.0/24"},
      "Public":{"CIDR":"192.168.1.0/24"}
    }
  },

  "Resources": {
    "BastionEC2Profile":{
      "Type":"AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref":"BastionEC2Role"}],
      }
    },

    "BastionEC2Role":{
      "Type":"AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{ 
            "Action": ["sts:AssumeRole"],
            "Effect": "Allow",
            "Principal": {
              "Service": ["ec2.amazonaws.com"]
            }
          }]
        },
        "Path": "/"
      }
    },

    "BastionEC2Policy": {
      "Type":"AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "BastionEC2Policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect":"Allow", 
            "Action":"s3:*",
            "Resource":"*"
          }]
        },
        "Roles": [{"Ref":"BastionEC2Role"}]
      }
    },

    "VPC":{
      "Type":"AWS::EC2::VPC",
      "Properties":{
        "CidrBlock":{"Fn::FindInMap":["SubnetConfig", "VPC", "CIDR"]},
        "EnableDnsSupport":"true",
        "EnableDnsHostnames":"false",
        "InstanceTenancy":"default",
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}}
        ]
      }
    },

    "InternetGateway":{
      "Type":"AWS::EC2::InternetGateway",
      "Properties":{
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ]
      }
    },

    "InternetGatewayAttach":{
      "Type":"AWS::EC2::VPCGatewayAttachment",
      "Properties":{
        "VpcId":{"Ref":"VPC"},
        "InternetGatewayId":{"Ref":"InternetGateway"}
      }
    },

    "NatEip": {
      "Type":"AWS::EC2::EIP",
      "Properties":{
        "Domain":{"Ref":"VPC"}
      }
    },

    "NAT": {
      "Type":"AWS::EC2::NatGateway",
      "DependsOn": "InternetGatewayAttach",
      "Properties":{
        "AllocationId":{"Fn::GetAtt":["NatEip", "AllocationId"]},
        "SubnetId":{"Ref":"PublicSubnet"},
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ]
      }
    },

    "PrivateSubnet":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"VPC"},
        "AvailabilityZone":{"Ref":"PrivateAvailZone"},
        "CidrBlock":{"Fn::FindInMap":["SubnetConfig", "Private", "CIDR"]},
        "MapPublicIpOnLaunch":"false",
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Private"}
        ]
      }
    },

    "PrivateRouteTable":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"VPC" },
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Private"}
        ]
      }
    },

    "PrivateRoute":{
      "Type":"AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttach",
      "Properties":{
        "DestinationCidrBlock":"0.0.0.0/0",
        "RouteTableId":{"Ref":"PrivateRouteTable"},
        "NatGatewayId":{"Ref":"NAT"}
      }
    },

    "PrivateSubnetRouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "SubnetId":{"Ref":"PrivateSubnet"},
        "RouteTableId":{"Ref":"PrivateRouteTable"}
      }
    },

    "PublicSubnet":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"VPC"},
        "AvailabilityZone":{"Ref":"PublicAvailZone"},
        "CidrBlock":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]},
        "MapPublicIpOnLaunch":"false",
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ]
      }
    },

    "PublicRouteTable":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"VPC" },
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ]
      }
    },

    "PublicRoute":{
      "Type":"AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttach",
      "Properties":{
        "DestinationCidrBlock":"0.0.0.0/0",
        "GatewayId":{"Ref":"InternetGateway"},
        "RouteTableId":{"Ref":"PublicRouteTable"}
      }
    },

    "PublicSubnetRouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "SubnetId":{"Ref":"PublicSubnet"},
        "RouteTableId":{"Ref":"PublicRouteTable"}
      }
    },

    "BastionSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"Bastion Security Group",
        "VpcId":{"Ref":"VPC"},
        "SecurityGroupIngress":[
          {"IpProtocol":"tcp", "FromPort":"22", "ToPort":"22", "CidrIp":"0.0.0.0/0"}
        ]
      }
    },

    "Bastion":{
      "Type":"AWS::EC2::Instance",
      "DependsOn":"InternetGatewayAttach",
      "Properties":{
        "AvailabilityZone":{"Ref":"PublicAvailZone"},
        "IamInstanceProfile": {"Ref":"BastionEC2Profile"},
        "ImageId":"ami-1f0abe67",
        "InstanceType":"t2.micro",
        "KeyName":{"Ref":"KeyName"},
        "NetworkInterfaces":[{
          "GroupSet":[{"Ref":"BastionSecurityGroup"}],
          "AssociatePublicIpAddress":"true",
          "DeviceIndex":"0",
          "DeleteOnTermination":"true",
          "SubnetId":{"Ref":"PublicSubnet"}
        }],
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash -xe\n",
              "yum update -y\n",
            ]]
          }
        }
      }
    },

    "WebSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"Web Security Group",
        "VpcId":{"Ref":"VPC"},
        "SecurityGroupIngress":[
          {"IpProtocol":"tcp", "FromPort":"22", "ToPort":"22", "CidrIp":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]}},
          {"IpProtocol":"tcp", "FromPort":"80", "ToPort":"80", "CidrIp":"0.0.0.0/0"}
        ]
      }
    },

    "WebServer":{
      "Type":"AWS::EC2::Instance",
      "DependsOn":"InternetGatewayAttach",
      "Properties":{
        "AvailabilityZone":{"Ref":"PublicAvailZone"},
        "ImageId":"ami-1f0abe67",
        "InstanceType":"t2.micro",
        "KeyName":{"Ref":"KeyName"},
        "NetworkInterfaces":[{
          "GroupSet":[{"Ref":"WebSecurityGroup"}],
          "AssociatePublicIpAddress":"true",
          "DeviceIndex":"0",
          "DeleteOnTermination":"true",
          "SubnetId":{"Ref":"PublicSubnet"}
        }],
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Public"}
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash -xe\n",
              "yum update -y\n",
            ]]
          }
        }
      }
    },

    "DbSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"Database Security Group",
        "VpcId":{"Ref":"VPC"},
        "SecurityGroupIngress":[
          {"IpProtocol":"tcp", "FromPort":"22", "ToPort":"22", "CidrIp":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]}},
          {"IpProtocol":"tcp", "FromPort":"3306", "ToPort":"3306", "CidrIp":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]}},
          {"IpProtocol":"tcp", "FromPort":"443", "ToPort":"443", "CidrIp":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]}},
          {"IpProtocol":"tcp", "FromPort":"80", "ToPort":"80", "CidrIp":{"Fn::FindInMap":["SubnetConfig", "Public", "CIDR"]}}
        ]
      }
    },

    "DbServer":{
      "Type":"AWS::EC2::Instance",
      "Properties":{
        "AvailabilityZone":{"Ref":"PrivateAvailZone"},
        "ImageId":"ami-1f0abe67",
        "InstanceType":"t2.micro",
        "KeyName":{"Ref":"KeyName"},
        "NetworkInterfaces":[{
          "GroupSet":[{"Ref":"DbSecurityGroup"}],
          "AssociatePublicIpAddress":"true",
          "DeviceIndex":"0",
          "DeleteOnTermination":"true",
          "SubnetId":{"Ref":"PrivateSubnet"}
        }],
        "Tags":[
          {"Key":"Application", "Value":{"Ref":"AWS::StackName"}},
          {"Key":"Network", "Value":"Private"}
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": ["", [
              "#!/bin/bash -xe\n",
              "yum update -y\n",
            ]]
          }
        }
      }
    }
  },

  "Outputs":{
    "VpcId":{
      "Description":"Fresh VPC",
      "Value":{"Ref": "VPC"}
    },
    "PublicSubnet":{
      "Description":"Public Subnet",
      "Value":{"Ref":"PublicSubnet"}
    }
  }
}
